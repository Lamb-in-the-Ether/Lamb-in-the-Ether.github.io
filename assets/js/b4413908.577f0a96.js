"use strict";(self.webpackChunksaf_kaal=self.webpackChunksaf_kaal||[]).push([[8428],{3914:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Lolth/Lolth","title":"Lolth","description":"Queen of Deceit, the Spider Goddess","source":"@site/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Lolth/Lolth.md","sourceDirName":"safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Lolth","slug":"/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Lolth/","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Lolth/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"safKaalWikiSidebar","previous":{"title":"Gruumsh","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Gruumsh/"},"next":{"title":"Tharizdun","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Tharizdun/"}}');var n=i(4848),r=i(8453);const s={},o="Lolth",l={},d=[{value:"Queen of Deceit, the Spider Goddess",id:"queen-of-deceit-the-spider-goddess",level:3}];function h(e){const t={h1:"h1",h3:"h3",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"lolth",children:"Lolth"})}),"\n",(0,n.jsx)(t.h3,{id:"queen-of-deceit-the-spider-goddess",children:"Queen of Deceit, the Spider Goddess"}),"\n",(0,n.jsx)(t.p,{children:"Lolth appears as either a tall, beautiful female drow or as a black spider with a female drow\u2019s head. She maintains a ruthless, tyrannical reign over evil elves, ruling through a combination of fear and the promise of power."})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>o});var a=i(6540);const n={},r=a.createContext(n);function s(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);