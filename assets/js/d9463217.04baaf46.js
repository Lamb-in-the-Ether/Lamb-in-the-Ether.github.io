"use strict";(self.webpackChunksaf_kaal=self.webpackChunksaf_kaal||[]).push([[2887],{8584:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Vecna/Vecna","title":"Vecna","description":"The Maimed Lord, The Whispered One","source":"@site/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Vecna/Vecna.md","sourceDirName":"safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Vecna","slug":"/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Vecna/","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Vecna/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"safKaalWikiSidebar","previous":{"title":"Torog","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Torog/"},"next":{"title":"Zehir","permalink":"/docs/safKaalWiki/Deities/Saf/Everlight/Third Age/Titan-Borne Gods/Zehir/"}}');var t=a(4848),s=a(8453);const r={},o="Vecna",d={},h=[{value:"The Maimed Lord, The Whispered One",id:"the-maimed-lord-the-whispered-one",level:3}];function c(e){const i={h1:"h1",h3:"h3",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"vecna",children:"Vecna"})}),"\n",(0,t.jsx)(i.h3,{id:"the-maimed-lord-the-whispered-one",children:"The Maimed Lord, The Whispered One"}),"\n",(0,t.jsx)(i.p,{children:"Vecna , deity of secrets, and god of undead, usually appears as a lich who is missing his left hand and left eye. How he lost his hand and eye has been lost to time. Vecna rules that which is not meant to be known and that which people wish to keep secret."})]})}function l(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,a)=>{a.d(i,{R:()=>r,x:()=>o});var n=a(6540);const t={},s=n.createContext(t);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);